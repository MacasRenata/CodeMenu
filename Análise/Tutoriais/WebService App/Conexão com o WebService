
Temos que adicionar as permissões no AndroidManifest 

<uses-permission android:name="android.permission.INTERNET" />
<uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />





A baixo temos o código AsyncTask para executar a chamada para o WebService em uma Thread separada da interface do usuário.

public class DownloadDados extends AsyncTask<Void, Void, Void> {
 
        @Override
        protected Void doInBackground(Void... params) {
            // Esta etapa é usada para executar a tarefa em background ou fazer a chamada           para o webservice
        }
 
        @Override
        protected void onPreExecute () {
            // Este passo é usado para configurar a tarefa, por exemplo, mostrando uma barra de progresso na interface do usuário.
        }
 
        @Override
        protected void onProgressUpdate (Progress... values) {
            // Este método é usado para exibir qualquer forma de progresso na interface do usuário, enquanto a tarefa ainda está em execução.
        }
 
        @Override
        protected void onPostExecute (Result result) {
            // O resultado da execução em background é passado para este passo como um parâmetro.
        }
 }
 // código para fazer a conexão com o webservice


         class DownloadDados extends AsyncTask<Void, Void, String> {
 
        @Override
        protected String doInBackground(Void... params) {
 
            HttpURLConnection urlConnection = null;
            BufferedReader reader = null;
            try {
                URL url = new URL("http://pokeapi.co/api/v2/pokemon/1/");
                urlConnection = (HttpURLConnection) url.openConnection();
                urlConnection.setRequestMethod("GET");
                urlConnection.connect();
 
                InputStream inputStream = urlConnection.getInputStream();
 
                reader = new BufferedReader(new InputStreamReader(inputStream));
 
                String linha;
                StringBuffer buffer = new StringBuffer();
                while((linha = reader.readLine()) != null) {
                    buffer.append(linha);
                    buffer.append("\n");
                }
 
                return buffer.toString();
            } catch (Exception e) {
                e.printStackTrace();
                if (urlConnection != null) {
                    urlConnection.disconnect();
                }
 
                if (reader != null) {
                    try {
                        reader.close();
                    } catch (IOException e1) {
                        e1.printStackTrace();
                    }
                }
            }
 
            return null;
        }
 
        @Override
        protected void onPostExecute(String dados) {
          // metodo para fazer eventos com os dados 
        }
    }

